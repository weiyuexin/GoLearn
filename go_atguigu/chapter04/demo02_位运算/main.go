package main

import "fmt"

// TODO 位运算
func main() {
	// & : 按位与，两位全为1，结果为1，否则结果为0
	// | : 按位或，两位有一个为1，结果为1，否则结果为0
	// ^ : 按位异或，两位中一个0，一个1，结果为1，否则为0

	//案例 计算机在运算时是采用补码运算的
	// 2 & 3 ：补码：0000 0010   0000 0011 =》0000 0010 =》2
	fmt.Println(2 & 3) //2
	// 2 | 3 : 补码：0000 0010   0000 0011 =》0000 0011 =》3
	fmt.Println(2 | 3) //3
	// 2 ^ 3 : 补码：0000 0010   0000 0011 =》0000 0001 =》1
	fmt.Println(2 ^ 3) //1
	// -2 ^ 2 : 补码：1111 1110  0000 0010 =》1111 1100 =》-4
	fmt.Println(-2 ^ 2) //-4

	// 移位运算
	// << 左移 符号位不变，低位补0  左移几位，相当于乘以2的几次方
	// >> 右移 低位溢出，符号位不变，并用符号位补溢出的高位
	// 1 >> 2 0000 0001 =>0000 0000 = 0
	fmt.Println(1 >> 2) //0
	// 1 << 2 0000 0001 =>0000 0100 = 4
	fmt.Println(1 << 2) //4

}
